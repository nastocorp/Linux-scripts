#!/bin/bash

# Inlämningsuppgift 1: Användarhantering genom script
# Inlämningsdatum: 2023-10-11
# Skriptet ligger i /user/local/bin
# Skriptet har root rättigheter
# Kan behöva laddas ned paket för whois, för att generera
# lösenords-hashet till användarna.



#===============================
#                              |
#            CSV-FIL           |
#                              |
#==============================|

# En if-sats, som kollar att man har matat in ett argument
# Om inte så skickar den ut ett felmeddelande

# Om inte argumentet är en CSV-fil kommer den
# att visa ett felmeddelande.

if [ $# -ne 1 ]; then
  echo "ERROR!: Ange en CSV-fil som ett argument." >&2; exit 1
elif ! [[ "$1" == *.csv ]]; then
  echo "ERROR!: '$1' är inte en giltig CSV-fil!" >&2; exit 1
fi

# While-loop som läser varje rad från CSV-filen.
# Fäldelaren ',' är kommatecknet som läser koden utan med mellanslag.
# IFS används för att vara mellanslaget till kommatecknet. 
# Skapa användarnamn genom variabeln som ska att ta de tre första 
# bokstäverna från förnamn och efternamn
# Generera en MD5-hashat lösenord som används för att lägga till
# användare med en annan variabel

while IFS="," read -r fornamn efternamn losenord operation; do
anvandare="${fornamn:0:3}${efternamn:0:3}"
hash_pw=$(mkpasswd -m MD5 "$losenord")
   

    #============================================
    #                                           |
    #            LÄGG TILL ANVÄNDARE            |
    #                                           |
    #============================================  

    # Undersöker ifall användaren finns i systemet.
    # Skapa användaren, med standardskal till Bash med hjälp av en flagga
    # Men även skapar hemkatalog, om den inte finns och lösenord åt användaren
    # När användaren skapas, visa det i stdoutput
    # Skickar ut fel meddelande om det inte gick att lägga till
    
    
if [ "$operation" == "add" ]; then
{
if ! id "$anvandare" &>/dev/null; then
      echo "-----------------------------------"
      echo -e "\e[1mLägger till användare:\e[0m $anvandare"
      echo "-----------------------------------"
      sudo useradd -s /bin/bash "$anvandare" -m -p "$hash_pw"
      echo "Användaren $anvandare har lagts till i systemet" >> /usr/local/bin/user_mngt.log
      echo "Producerar lösenords_hash till: $anvandare ---> $hash_pw"
else
      echo "ERROR!: Kunde inte lägga till $anvandare" >& /dev/null
    fi
}   
    #======================================
    #                                     |
    #         RADERAR ANVÄNDARE           |
    #                                     |
    #====================================== 
    # Kolla om användaren finns, om hemkatalogen existerar och ta bort användaren
    # Tar bort användaren och skriver ut i stdoutput och sparas i loggfilen
    # Tar bort användaren och dennes hemkatalog, meddelandet visas i stdout
    # Detta görs bara om användaren och hemkatalogen finns i systemet
    # Visar ett felmedelande om användaren inte existerar
    # Avslutas med att koden körs från en .csv fil. 

    
elif [ "$operation" == "remove" ]; then 
{
if id "$anvandare" &> /dev/null; then
      echo "-----------------------------------"
      echo -e "\e[1mTar bort användare:\e[0m $anvandare"
      echo "-----------------------------------"
      sudo deluser "$anvandare" 2> /dev/null #
      sudo rm -r "/home/$anvandare" 2> /dev/null #
      echo "Användaren: $anvandare har tagits bort och hemkatalogen" >&2 >> /usr/local/bin/user_mngt.log
else
      echo "Användaren: $anvandare existerar inte!" >&2> /dev/null        
fi
}
fi
done <"inl1_data.csv"  